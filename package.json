{
  "name": "a-promise-wrapper",
  "version": "1.1.0",
  "description": "Utility object which  helps you avoid try and catch blocks inside async functions",
  "main": "build/index.js",
  "scripts": {
    "dev": "watch \"npm run build\" src",
    "build": "babel src -d build",
    "test": "standard --fix && jest",
    "test:watch": "jest --watch --verbose",
    "pack": "npm pack --dry-run",
    "prepare": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/krlozadan/a-promise-wrapper.git"
  },
  "keywords": [
    "async",
    "promise",
    "try",
    "catch",
    "wrapper",
    "utility",
    "util",
    "wrap",
    "await",
    "asynchronous"
  ],
  "author": "Carlos Adan Cortes (https://www.carlosadan.com)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/krlozadan/a-promise-wrapper/issues"
  },
  "homepage": "https://github.com/krlozadan/a-promise-wrapper#readme",
  "devDependencies": {
    "@babel/cli": "^7.8.4",
    "@babel/core": "^7.9.0",
    "@babel/preset-env": "^7.9.5",
    "babel-jest": "^25.3.0",
    "jest": "^25.3.0",
    "standard": "^14.3.3",
    "watch": "^1.0.2"
  },
  "dependencies": {
    "@babel/polyfill": "^7.8.7"
  }
}
